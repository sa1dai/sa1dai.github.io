{"version":3,"sources":["components/OrderList/index.ts","components/OrderList/OrderList.tsx","services/FirebaseApiService.ts","components/App/index.ts","components/App/App.tsx","index.tsx"],"names":["OrderList","props","orders","Array","isArray","length","className","map","order","key","name","phone","service","FirebaseApiService","_apiBase","getOrders","a","fetch","res","ok","Error","status","json","apiQuestionsData","Object","values","App","state","error","then","setState","catch","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oZAEeA,G,cCOG,SAACC,GAAgD,IACzDC,EAAWD,EAAXC,OACR,OAAKC,MAAMC,QAAQF,GAGG,IAAlBA,EAAOG,OACF,yBAAKC,UAAU,wBAAf,2DAGP,wBAAIA,UAAU,gBACXJ,EAAOK,KAAI,SAAAC,GACV,OACE,wBAAIF,UAAU,eAAeG,IAAG,UAAKD,EAAME,MAAX,OAAkBF,EAAMG,QACtD,0BAAML,UAAU,sBAAsBE,EAAME,MAC5C,0BAAMJ,UAAU,sBAAsBE,EAAMG,OAC5C,0BAAML,UAAU,sBAAsBE,EAAMI,cAZ7C,OCNUC,E,iDACXC,SAAW,wD,KAEZC,U,sBAAY,8BAAAC,EAAA,sEACCC,MAAM,GAAD,OAAI,EAAKH,WADf,WACXI,EADW,QAERC,GAFQ,sBAGT,IAAIC,MAAJ,0CAA6CF,EAAIG,SAHxC,uBAK6BH,EAAII,OALjC,cAKXC,EALW,yBAMVC,OAAOC,OAAOF,IANJ,4CCLNG,G,mBCSb,WAAYzB,GAAY,IAAD,8BACrB,4CAAMA,KACD0B,MAAQ,CACXzB,OAAQ,KACR0B,MAAO,MAJY,E,uMASL,IAAIf,GAEjBE,YACAc,MAAK,SAAA3B,GAAM,OAAI,EAAK4B,SAAS,CAAE5B,cAC/B6B,OAAM,kBAAM,EAAKD,SAAS,CAAEF,MAAO,uB,gIAGZ,IAAD,EACCI,KAAKL,MAAvBzB,EADiB,EACjBA,OAAQ0B,EADS,EACTA,MAChB,OAAIA,EACK,yBAAKtB,UAAU,wBAAwBsB,GAE3C1B,EAGE,kBAAC,EAAD,CAAWA,OAAQA,IAFjB,yBAAKI,UAAU,wBAAf,kB,GAvBK2B,IAAMC,YCCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.306e1ba6.chunk.js","sourcesContent":["import OrderList from './OrderList';\n\nexport default OrderList;\n","import React, { ReactElement } from 'react';\nimport './OrderList.css';\nimport 'src/components/common.css';\nimport { Order } from 'src/types';\n\ninterface OrderListProps {\n  orders: Order[];\n}\n\nconst OrderList = (props: OrderListProps): ReactElement | null => {\n  const { orders } = props;\n  if (!Array.isArray(orders)) {\n    return null;\n  }\n  if (orders.length === 0) {\n    return <div className=\"common-screen-center\">Заявок нет</div>;\n  }\n  return (\n    <ul className=\"OrderList-ul\">\n      {orders.map(order => {\n        return (\n          <li className=\"OrderList-li\" key={`${order.name}${order.phone}`}>\n            <span className=\"OrderList-li-title\">{order.name}</span>\n            <span className=\"OrderList-li-title\">{order.phone}</span>\n            <span className=\"OrderList-li-title\">{order.service}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default OrderList;\n","import { Order } from 'src/types';\n\ninterface ApiOrdersData {\n  [key: string]: Order;\n}\n\nexport default class FirebaseApiService {\n  private _apiBase = 'https://project-zero-f13b0.firebaseio.com/orders.json';\n\n  public getOrders = async (): Promise<Order[]> => {\n    const res = await fetch(`${this._apiBase}`);\n    if (!res.ok) {\n      throw new Error(`Could not fetch orders received ${res.status}`);\n    }\n    const apiQuestionsData: ApiOrdersData = await res.json();\n    return Object.values(apiQuestionsData);\n  };\n}\n","import App from './App';\n\n// теперь можно писать import App from 'src/components/App',\n// а не import App from 'src/components/App/App'\nexport default App;\n","import React, { ReactNode } from 'react';\nimport OrderList from 'src/components/OrderList';\nimport { Order } from 'src/types';\nimport FirebaseApiService from 'src/services/FirebaseApiService';\nimport 'src/components/common.css';\nimport './App.css';\n\ninterface AppState {\n  orders: Order[] | null;\n  error: string | null;\n}\n\nclass App extends React.Component<{}, AppState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      orders: null,\n      error: null\n    };\n  }\n\n  async componentDidMount(): Promise<void> {\n    const service = new FirebaseApiService();\n    service\n      .getOrders()\n      .then(orders => this.setState({ orders }))\n      .catch(() => this.setState({ error: 'Error occurred!' }));\n  }\n\n  public render(): ReactNode {\n    const { orders, error } = this.state;\n    if (error) {\n      return <div className=\"common-screen-center\">{error}</div>;\n    }\n    if (!orders) {\n      return <div className=\"common-screen-center\">Loading...</div>;\n    }\n    return <OrderList orders={orders} />;\n  }\n}\n\nexport default App;\n","// Импорт 'react-app-polyfill/ie11' для  поддержки ie 11 в create react app 3\n// Этот импорт должен идти первым в index.tsx\n// (https://github.com/facebook/create-react-app/blob/master/packages/react-app-polyfill/README.md#internet-explorer-11)\nimport 'react-app-polyfill/ie11';\n// Полифилл для старых браузеров\n// https://github.com/facebook/create-react-app/blob/master/packages/react-app-polyfill/README.md#polyfilling-other-language-features\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'src/index.css';\nimport App from 'src/components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}