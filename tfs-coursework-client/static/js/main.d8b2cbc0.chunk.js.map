{"version":3,"sources":["components/spinner/index.js","components/spinner/spinner.js","hoc/service-context/service-context.js","hoc/with-service.js","components/pages/home-page/board-list-item/index.js","components/pages/home-page/board-list-item/board-list-item.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","utils/compose.js","actions/action-types.js","actions/index.js","components/pages/home-page/board-list-add-form/board-list-add-form.js","components/pages/home-page/board-list-add-form/index.js","components/pages/home-page/board-list/board-list.js","components/pages/home-page/board-list/index.js","components/pages/home-page/home-page.js","components/pages/board-page/column-item/column-item.js","components/pages/board-page/column-item/index.js","components/pages/board-page/column-add-form/column-add-form.js","components/pages/board-page/column-add-form/index.js","components/pages/board-page/column/column.js","components/pages/board-page/column/index.js","components/pages/board-page/column-list-add-form/column-list-add-form.js","components/pages/board-page/column-list-add-form/index.js","components/pages/board-page/column-list/column-list.js","components/pages/board-page/column-list/index.js","components/pages/board-page/board/board.js","components/pages/board-page/board/index.js","components/header/index.js","components/header/header.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","reducers/board-list-reducer-async.js","reducers/board-list-add-form-reducer.js","utils/get-random-string.js","reducers/board-reducer-async.js","reducers/column-add-form-reducer.js","reducers/column-list-add-form-reducer.js","reducers/index.js","store.js","index.js","services/api-service.js"],"names":["Spinner","react_default","a","createElement","className","React","createContext","ServiceProvider","Provider","ServiceConsumer","Consumer","withService","Wrapped","props","service","Object","assign","BoardListItem","_ref","board","title","url","react_router_dom","to","decodeURI","ErrorIndicator","compose","_len","arguments","length","funcs","Array","_key","comp","reduceRight","wrapped","f","ActionTypes","boardAddTitleChanged","boardTitle","type","payload","columnAddTitleChanged","columnTitle","addColumn","columnItemAddTitleChanged","columnItemTitle","addColumnItem","columnIndex","dropColumnItem","dropInfo","deleteColumnItem","columnItemIndex","dropColumn","deleteColumn","fetchBoards","dispatch","fetchBoardsRequest","getBoards","then","data","newBoards","fetchBoardsSuccess","catch","err","error","fetchBoardsFailure","addBoard","newBoard","history","addBoardRequest","boards","addBoardSuccess","push","addBoardFailure","deleteBoard","boardId","deleteBoardRequest","deleteBoardSuccess","deleteBoardFailure","fetchBoard","fetchBoardRequest","getBoard","fetchBoardSuccess","fetchBoardFailure","saveBoard","saveBoardSuccess","saveBoardFailure","BoardListAddForm","onSubmit","onTitleChanged","formIsValid","buttonClassName","value","onChange","placeholder","concat","disabled","BoardListAddFormContainer","_this","trim","e","target","preventDefault","_this$props","this","serverIsProcessingRequest","boardCreateForm","components_spinner","board_list_add_form_BoardListAddForm","Fragment","components_error_indicator","Component","connect","_ref2","_ref2$boardListAddFor","boardListAddForm","_ref3","bindActionCreators","withRouter","BoardList","map","key","id","home_page_board_list_item","BoardListContainer","loading","board_list_BoardList","home_page_board_list_add_form","_ref2$boardListAsync","boardListAsync","HomePage","home_page_board_list","ColumnItem","onItemDelete","columnItem","onClick","ColumnAddForm","inputId","ColumnAddFormContainer","document","getElementById","_inputId","focus","column_add_form_ColumnAddForm","columnAddForm","Column","onColumnDelete","_this$props2","column","provided","dragHandleProps","react_beautiful_dnd_esm","droppableId","ref","innerRef","droppableProps","items","index","draggableId","style","objectSpread","draggableProps","board_page_column_item","column_Column","board_page_column_add_form","ColumnListAddForm","ColumnListAddFormContainer","column_list_add_form_ColumnListAddForm","columnListAddForm","ColumnList","columns","direction","board_page_column","board_page_column_list_add_form","CardColumnListContainer","column_list_ColumnList","Board","onDragEnd","result","onBoardDelete","_this$props$board","board_page_column_list","BoardContainer","_this$props3","board_Board","_ref$boardAsync","boardAsync","Header","onHomeClick","App","role","components_header","react_router","path","component","exact","render","match","params","board_page_board","ErrorBoundry","state","hasError","setState","children","boardListReducerAsync","action","undefined","boardListAddFormReducer","getRandomString","randomString","possible","i","charAt","Math","floor","random","updatedColumns","toConsumableArray","addItemToColumn","reorder","list","startIndex","endIndex","from","_result$splice","splice","removed","slicedToArray","remove","removeIndex","_ref4","_ref5","_ref5$source","source","startColumnId","startItemIndex","destination","endColumnId","endItemIndex","findIndex","swapItemsInColumn","startColumnIndex","endColumnIndex","sourceClone","destClone","_sourceClone$splice","move","find","_ref6","_ref7","_ref7$source","_ref8","_ref9","deleteItemFromColumn","_ref10","_ref11","boardReducerAsync","columnAddFormReducer","columnListAddFormReducer","reducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","getState","next","console","log","_apiBase","getResource","_callee","res","regenerator_default","wrap","_context","prev","fetch","sent","ok","Error","status","json","abrupt","stop","addResource","_callee2","resource","_context2","method","headers","Accept","Content-Type","body","JSON","stringify","putResource","_callee3","_context3","deleteResource","_callee4","_context4","_callee5","_context5","_callee6","_context6","_callee7","_context7","_callee8","_context8","_callee9","_context9","ReactDOM","es","error_boundry","components_app"],"mappings":"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","file":"static/js/main.d8b2cbc0.chunk.js","sourcesContent":["import Spinner from './spinner';\n\nexport default Spinner;\n","import React from 'react';\n\nimport './spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"lds-css\">\n      <div className=\"lds-eclipse\">\n        <div/>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React from 'react';\n\nconst {\n  Provider: ServiceProvider,\n  Consumer: ServiceConsumer\n} = React.createContext();\n\nexport {\n  ServiceProvider,\n  ServiceConsumer\n};\n","import React from 'react';\nimport { ServiceConsumer } from './service-context';\n\nconst withService = () => (Wrapped) => {\n\n  return (props) => {\n    return (\n      <ServiceConsumer>\n        {\n          (service) => {\n            return (<Wrapped {...props}\n                             service={service}/>);\n          }\n        }\n      </ServiceConsumer>\n    );\n  }\n};\n\nexport default withService;\n","import BoardListItem from \"./board-list-item\";\n\nexport default BoardListItem;\n","import React from 'react';\nimport './board-list-item.css';\nimport { Link } from 'react-router-dom';\n\nconst BoardListItem = ({ board }) => {\n  const { title, url } = board;\n  return (\n    <Link to={decodeURI(url)} className=\"board-list-item\">{title}</Link>\n  );\n};\n\nexport default BoardListItem;\n","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;\n","import React from 'react';\nimport './error-indicator.css';\n\nconst ErrorIndicator = () => {\n  return (\n    <div className=\"error-indicator alert alert-danger text-center\">\n      <strong>An error occured!</strong>\n    </div>\n  );\n};\n\nexport default ErrorIndicator;\n","const compose = (...funcs) => (comp) => {\n  return funcs.reduceRight(\n    (wrapped, f) => f(wrapped), comp);\n};\n\nexport default compose;\n","export default class ActionTypes {\n\n  static get fetchBoardsRequest() {\n    return 'FETCH_BOARDS_REQUEST';\n  }\n\n  static get fetchBoardsSuccess() {\n    return 'FETCH_BOARDS_SUCCESS';\n  }\n\n  static get fetchBoardsFailure() {\n    return 'FETCH_BOARDS_FAILURE';\n  }\n\n  static get addBoardRequest() {\n    return 'ADD_BOARD_REQUEST';\n  }\n\n  static get addBoardSuccess() {\n    return 'ADD_BOARD_SUCCESS';\n  }\n\n  static get addBoardFailure() {\n    return 'ADD_BOARD_FAILURE';\n  }\n\n  static get boardAddTitleChanged() {\n    return 'BOARD_ADD_TITLE_CHANGED';\n  }\n\n  static get deleteBoardRequest() {\n    return 'DELETE_BOARD_REQUEST';\n  }\n\n  static get deleteBoardSuccess() {\n    return 'DELETE_BOARD_SUCCESS';\n  }\n\n  static get deleteBoardFailure() {\n    return 'DELETE_BOARD_FAILURE';\n  }\n\n  static get fetchBoardRequest() {\n    return 'FETCH_BOARD_REQUEST';\n  }\n\n  static get fetchBoardSuccess() {\n    return 'FETCH_BOARD_SUCCESS';\n  }\n\n  static get fetchBoardFailure() {\n    return 'FETCH_BOARD_FAILURE';\n  }\n\n  static get saveBoardSuccess() {\n    return 'SAVE_BOARD_SUCCESS';\n  }\n\n  static get saveBoardFailure() {\n    return 'SAVE_BOARD_FAILURE';\n  }\n\n  static get addColumn() {\n    return 'ADD_COLUMN';\n  }\n\n  static get columnAddTitleChanged() {\n    return 'COLUMN_ADD_TITLE_CHANGED';\n  }\n\n  static get addColumnItem() {\n    return 'ADD_COLUMN_ITEM';\n  }\n\n  static get columnItemAddTitleChanged() {\n    return 'COLUMN_ITEM_ADD_TITLE_CHANGED';\n  }\n\n  static get dropColumnItem() {\n    return 'COLUMN_ITEM_DROP';\n  }\n\n  static get deleteColumnItem() {\n    return 'COLUMN_ITEM_DELETE';\n  }\n\n  static get dropColumn() {\n    return 'COLUMN_DROP';\n  }\n\n  static get deleteColumn() {\n    return 'COLUMN_DELETE';\n  }\n}\n","import ActionTypes from './action-types';\n\nconst boardsRequested = () => {\n  return {\n    type: ActionTypes.fetchBoardsRequest\n  };\n};\n\nconst boardsLoaded = (newBoards) => {\n  return {\n    type: ActionTypes.fetchBoardsSuccess,\n    payload: newBoards\n  };\n};\n\nconst boardsError = (error) => {\n  return {\n    type: ActionTypes.fetchBoardsFailure,\n    payload: error\n  };\n};\n\nconst addBoardRequested = () => {\n  return {\n    type: ActionTypes.addBoardRequest\n  };\n};\n\nconst addBoardSuccess = (boards) => {\n  return {\n    type: ActionTypes.addBoardSuccess,\n    payload: boards\n  };\n};\n\nconst addBoardError = (error) => {\n  return {\n    type: ActionTypes.addBoardFailure,\n    payload: error\n  };\n};\n\nexport const boardAddTitleChanged = (boardTitle) => {\n  return {\n    type: ActionTypes.boardAddTitleChanged,\n    payload: boardTitle\n  };\n};\n\nconst boardRequested = () => {\n  return {\n    type: ActionTypes.fetchBoardRequest\n  };\n};\n\nconst boardLoaded = (board) => {\n  return {\n    type: ActionTypes.fetchBoardSuccess,\n    payload: board\n  };\n};\n\nconst deleteBoardRequest = () => {\n  return {\n    type: ActionTypes.deleteBoardRequest\n  };\n};\n\nconst deleteBoardSuccess = () => {\n  return {\n    type: ActionTypes.deleteBoardSuccess\n  };\n};\n\nconst deleteBoardError = (error) => {\n  return {\n    type: ActionTypes.deleteBoardFailure,\n    payload: error\n  };\n};\n\nconst boardError = (error) => {\n  return {\n    type: ActionTypes.fetchBoardFailure,\n    payload: error\n  };\n};\n\nconst boardSaved = () => {\n  return {\n    type: ActionTypes.saveBoardSuccess,\n  };\n};\n\nconst boardSaveError = (error) => {\n  return {\n    type: ActionTypes.saveBoardFailure,\n    payload: error\n  };\n};\n\nexport const columnAddTitleChanged = (columnTitle) => {\n  return {\n    type: ActionTypes.columnAddTitleChanged,\n    payload: columnTitle\n  };\n};\n\nexport const addColumn = (columnTitle) => {\n  return {\n    type: ActionTypes.addColumn,\n    payload: columnTitle\n  };\n};\n\nexport const columnItemAddTitleChanged = (columnItemTitle) => {\n  return {\n    type: ActionTypes.columnItemAddTitleChanged,\n    payload: columnItemTitle\n  };\n};\n\nexport const addColumnItem = (columnIndex, columnItemTitle) => {\n  return {\n    type: ActionTypes.addColumnItem,\n    payload: { columnIndex, columnItemTitle }\n  };\n};\n\nexport const dropColumnItem = (dropInfo) => {\n  return {\n    type: ActionTypes.dropColumnItem,\n    payload: dropInfo\n  };\n};\n\nexport const deleteColumnItem = (columnIndex, columnItemIndex) => {\n  return {\n    type: ActionTypes.deleteColumnItem,\n    payload: { columnIndex, columnItemIndex }\n  };\n};\n\nexport const dropColumn = (dropInfo) => {\n  return {\n    type: ActionTypes.dropColumn,\n    payload: dropInfo\n  };\n};\n\nexport const deleteColumn = (columnIndex) => {\n  return {\n    type: ActionTypes.deleteColumn,\n    payload: columnIndex\n  };\n};\n\nconst fetchBoards = (service) => () => (dispatch) => {\n  dispatch(boardsRequested());\n  service.getBoards()\n    .then((data) => dispatch(boardsLoaded(data)))\n    .catch((err) => dispatch(boardsError(err)));\n};\n\nconst addBoard = (service) => (newBoard, history) => (dispatch) => {\n  dispatch(addBoardRequested());\n  service.addBoard(newBoard)\n    .then((data) => {\n      const { url } = data;\n\n      dispatch(addBoardSuccess(data));\n      history.push(url);\n    })\n    .catch((err) => {\n      dispatch(addBoardError(err))\n    });\n};\n\nconst deleteBoard = (service) => (boardId, history) => (dispatch) => {\n  dispatch(deleteBoardRequest());\n  service.deleteBoard(boardId)\n    .then(() => {\n      dispatch(deleteBoardSuccess());\n      history.push(\"/\");\n    })\n    .catch((err) => {\n      dispatch(deleteBoardError(err))\n    });\n};\n\nconst fetchBoard = (service) => (boardId) => (dispatch) => {\n  dispatch(boardRequested());\n  service.getBoard(boardId)\n    .then((data) => dispatch(boardLoaded(data)))\n    .catch((err) => dispatch(boardError(err)));\n};\n\nconst saveBoard = (service) => (boardId, board) => (dispatch) => {\n  service.saveBoard(boardId, board)\n    .then(() => dispatch(boardSaved()))\n    .catch(() => dispatch(boardSaveError()));\n};\n\nexport {\n  fetchBoards,\n  addBoard,\n  fetchBoard,\n  saveBoard,\n  deleteBoard,\n  ActionTypes\n};\n","import React, { Component } from 'react';\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport './board-list-add-form.css';\nimport {withRouter} from \"react-router-dom\";\nimport Spinner from \"src/components/spinner\";\nimport ErrorIndicator from \"src/components/error-indicator\";\nimport compose from \"src/utils/compose\";\nimport withService from \"src/hoc/with-service\";\nimport {addBoard, boardAddTitleChanged} from \"src/actions\";\n\nconst BoardListAddForm = ({ boardTitle, onSubmit, onTitleChanged, formIsValid }) => {\n  const buttonClassName = formIsValid ? \"btn-success\" : \"btn-warning cursor-not-allowed\";\n\n  return (\n    <form className=\"create-form d-flex board-list-add-form\"\n          onSubmit={onSubmit}>\n\n      <input type=\"text\"\n             className=\"form-control \"\n             value={boardTitle}\n             onChange={onTitleChanged}\n             placeholder=\"Board title\" />\n\n      <button type=\"submit\"\n              className={`btn ${buttonClassName}`}\n              disabled={!formIsValid}>Add</button>\n    </form>\n  );\n};\n\nclass BoardListAddFormContainer extends Component {\n\n  formIsValid = () => {\n    return this.props.boardTitle.trim().length > 0;\n  };\n\n  onTitleChanged = (e) => {\n    this.props.boardAddTitleChanged(e.target.value);\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    if (this.formIsValid()) {\n      this.props.addBoard(this.props.boardTitle, this.props.history);\n    }\n  };\n\n  render() {\n    const { boardTitle, serverIsProcessingRequest, error } = this.props;\n\n    let boardCreateForm = serverIsProcessingRequest\n      ? <Spinner />\n      : <BoardListAddForm\n          boardTitle={boardTitle}\n          onSubmit={this.onSubmit}\n          onTitleChanged={this.onTitleChanged}\n          formIsValid={this.formIsValid()} />;\n\n    return (\n      <React.Fragment>\n        <h2 className='text-center'>Create new board</h2>\n        {boardCreateForm}\n        {error && <ErrorIndicator />}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (\n  {\n    boardListAddForm:\n    {\n      boardTitle,\n      serverIsProcessingRequest,\n      error\n    }\n  }) => {\n  return { boardTitle, serverIsProcessingRequest, error };\n};\n\nconst mapDispatchToProps = (dispatch, { service }) => {\n\n  return bindActionCreators({\n    addBoard: addBoard(service),\n    boardAddTitleChanged: boardAddTitleChanged\n  }, dispatch);\n};\n\nexport default compose(\n  withService(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(withRouter(BoardListAddFormContainer));\n\n//export default BoardListAddFormContainer;\n","import BoardListAddForm from './board-list-add-form';\n\nexport default BoardListAddForm;\n","import React, { Component } from 'react';\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport './board-list.css';\nimport Spinner from \"src/components/spinner\";\nimport withService from \"src/hoc/with-service\";\nimport BoardListItem from \"src/components/pages/home-page/board-list-item\";\nimport BoardListAddForm from \"src/components/pages/home-page/board-list-add-form\";\nimport compose from \"src/utils/compose\";\nimport {fetchBoards} from \"../../../../actions\";\nimport ErrorIndicator from \"src/components/error-indicator\";\n\nconst BoardList = ({ boards }) => {\n  return (\n    <React.Fragment>\n      <h1 className=\"text-center\">Your boards</h1>\n\n      { boards.length === 0 && <p className=\"empty-board-list-text text-center\">You dont have any boards</p> }\n\n      <ul className=\"board-list list-group\">\n        {\n          boards.map((board) => {\n            return (\n              <li className=\"board-list-item text-center list-group-item\"\n                  key={board.id}>\n                <BoardListItem board={board}/>\n              </li>\n            );\n          })\n        }\n      </ul>\n    </React.Fragment>\n  );\n};\n\nclass BoardListContainer extends Component {\n\n  componentDidMount() {\n    this.props.fetchBoards();\n  }\n\n  render() {\n    const { boards, loading, error } = this.props;\n\n    if (loading) {\n      return <Spinner />;\n    }\n\n    if (error) {\n      return <ErrorIndicator />;\n    }\n\n    return (\n      <React.Fragment>\n        <BoardList boards={boards}/>\n        <BoardListAddForm />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ boardListAsync: { boards, loading, error }}) => {\n  return { boards, loading, error };\n};\n\nconst mapDispatchToProps = (dispatch, { service }) => {\n\n  return bindActionCreators({\n    fetchBoards: fetchBoards(service)\n  }, dispatch);\n};\n\nexport default compose(\n  withService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(BoardListContainer);\n","import BoardList from './board-list';\n\nexport default BoardList;\n","import React from 'react';\n\nimport './home-page.css';\nimport BoardList from './board-list';\n\nconst HomePage = () => {\n  return (\n    <div className=\"home-page-content\">\n      <BoardList />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, {Component} from 'react';\nimport './column-item.css';\nimport {bindActionCreators} from \"redux\";\nimport {deleteColumnItem} from \"src/actions\";\nimport compose from \"src/utils/compose\";\nimport {connect} from \"react-redux\";\n\nclass ColumnItem  extends Component {\n  onItemDelete = () => {\n    const { columnIndex, columnItemIndex } = this.props;\n    //const result = window.prompt(\"The item will be deleted. Type 1 to delete it.\");\n\n    //if (result === '1') {\n      this.props.deleteColumnItem(columnIndex, columnItemIndex);\n    //}\n  };\n\n  render() {\n    const { columnItem: { title } } = this.props;\n    return (\n      <React.Fragment>\n        {title}\n        <button\n          className=\"btn btn-secondary btn-sm column-item-button\"\n          onClick={this.onItemDelete}\n        >\n          <i className=\"fas fa-trash-alt\"/>\n        </button>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    deleteColumnItem: deleteColumnItem\n  }, dispatch);\n};\n\nexport default compose(\n  connect(null, mapDispatchToProps),\n)(ColumnItem);\n","import ColumnItem from \"./column-item\";\n\nexport default ColumnItem;\n","import React, { Component } from 'react';\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport './column-add-form.css';\nimport {addColumnItem, columnItemAddTitleChanged} from \"src/actions\";\nimport compose from \"src/utils/compose\";\n\nconst ColumnAddForm = ({ inputId, columnItemTitle, onSubmit, onTitleChanged }) => {\n  return (\n    <form className=\"create-form column-add-form d-flex\"\n          onSubmit={onSubmit}>\n\n      <input id={inputId}\n             type=\"text\"\n             className=\"form-control\"\n             value={columnItemTitle}\n             onChange={onTitleChanged}\n             placeholder=\"Enter item title...\" />\n\n      <button type=\"submit\"\n              className=\"btn btn-success\">Add</button>\n    </form>\n  );\n};\n\nclass ColumnAddFormContainer extends Component {\n\n  componentDidMount() {\n    this._inputId = `columnAddFormInput${this.props.columnIndex}`;\n  }\n\n  formIsValid = () => {\n    return this.props.columnItemTitle.trim().length > 0;\n  };\n\n  onTitleChanged = (e) => {\n    this.props.columnItemAddTitleChanged(e.target.value);\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    if (this.formIsValid()) {\n      this.props.addColumnItem(this.props.columnIndex, this.props.columnItemTitle);\n      document.getElementById(this._inputId).focus();\n    }\n  };\n\n  render() {\n    const { columnItemTitle } = this.props;\n\n    return (\n      <ColumnAddForm\n        inputId={this._inputId}\n        columnItemTitle={columnItemTitle}\n        onSubmit={this.onSubmit}\n        onTitleChanged={this.onTitleChanged} />\n    );\n  }\n}\n\nconst mapStateToProps = ({ columnAddForm: { columnItemTitle }}) => {\n  return { columnItemTitle };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    columnItemAddTitleChanged: columnItemAddTitleChanged,\n    addColumnItem: addColumnItem\n  }, dispatch);\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n)(ColumnAddFormContainer);\n","import ColumnAddForm from './column-add-form';\n\nexport default ColumnAddForm;\n","import React, {Component} from 'react';\nimport ColumnItem from '../column-item';\n\nimport './column.css';\nimport ColumnAddForm from \"src/components/pages/board-page/column-add-form\"\nimport {Draggable, Droppable} from \"react-beautiful-dnd\";\nimport {bindActionCreators} from \"redux\";\nimport {deleteColumn} from \"src/actions\";\nimport compose from \"src/utils/compose\";\nimport {connect} from \"react-redux\";\n\nclass Column extends Component {\n  onColumnDelete = () => {\n    const { columnIndex, deleteColumn } = this.props;\n    //const result = window.prompt(\"The column will be deleted. Type 11 to delete it.\");\n\n    //if (result === '11') {\n      deleteColumn(columnIndex);\n    //}\n  };\n\n  render() {\n    const { column, columnIndex, provided } = this.props;\n\n    return (\n      <React.Fragment>\n        <h2\n          className=\"column-title\"\n          {...provided.dragHandleProps}\n        >\n          {column.title}\n        </h2>\n\n        <button\n          className=\"btn btn-secondary btn-sm column-button\"\n          onClick={this.onColumnDelete}\n        >\n          <i className=\"fas fa-trash-alt\"/>\n        </button>\n\n        <Droppable droppableId={column.id} type=\"item\">\n          {provided => (\n            <div\n              className=\"column list-group\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {column.items.map((columnItem, index) => (\n                <Draggable\n                  key={columnItem.id}\n                  draggableId={columnItem.id}\n                  index={index}\n                >\n                  {(provided) => (\n                    <div className=\"column-item text-center list-group-item\"\n                         key={`${columnIndex}${index}`}\n                         style={{...provided.draggableProps.style }}\n                         ref={provided.innerRef}\n                         {...provided.draggableProps}\n                         {...provided.dragHandleProps}\n                    >\n                      <ColumnItem\n                        columnItem={columnItem}\n                        columnIndex={columnIndex}\n                        columnItemIndex={index}\n                      />\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </React.Fragment>\n    );\n  }\n}\n\nconst ColumnContainer = ({ column, columnIndex, provided, deleteColumn }) => {\n  return (\n    <React.Fragment>\n      <Column column={column} columnIndex={columnIndex} provided={provided} deleteColumn={deleteColumn}/>\n      <ColumnAddForm columnIndex={columnIndex}/>\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    deleteColumn: deleteColumn\n  }, dispatch);\n};\n\nexport default compose(\n  connect(null, mapDispatchToProps),\n)(ColumnContainer);\n","import Column from './column';\n\nexport default Column;\n","import React, { Component } from 'react';\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport './column-list-add-form.css';\nimport {addColumn, columnAddTitleChanged} from \"src/actions\";\nimport compose from \"src/utils/compose\";\n\nconst ColumnListAddForm = ({ inputId, columnTitle, onSubmit, onTitleChanged }) => {\n  return (\n    <form className=\"create-form column-list-add-form\"\n          onSubmit={onSubmit}>\n\n      <input id={inputId}\n             type=\"text\"\n             className=\"form-control\"\n             value={columnTitle}\n             onChange={onTitleChanged}\n             placeholder=\"Enter column title...\" />\n\n      <button type=\"submit\"\n              className=\"btn btn-success\">Add Column</button>\n    </form>\n  );\n};\n\nclass ColumnListAddFormContainer extends Component {\n\n  _inputId = \"columnListAddFormInput\";\n\n  formIsValid = () => {\n    return this.props.columnTitle.trim().length > 0;\n  };\n\n  onTitleChanged = (e) => {\n    this.props.columnAddTitleChanged(e.target.value);\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    if (this.formIsValid()) {\n      this.props.addColumn(this.props.columnTitle);\n      document.getElementById(this._inputId).focus();\n    }\n  };\n\n  render() {\n    const { columnTitle } = this.props;\n\n    return (\n      <ColumnListAddForm\n        inputId={this._inputId}\n        columnTitle={columnTitle}\n        onSubmit={this.onSubmit}\n        onTitleChanged={this.onTitleChanged} />\n    );\n  }\n}\n\nconst mapStateToProps = ({ columnListAddForm: { columnTitle } }) => {\n  return { columnTitle };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    columnAddTitleChanged: columnAddTitleChanged,\n    addColumn: addColumn\n  }, dispatch);\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n)(ColumnListAddFormContainer);\n","import ColumnListAddForm from './column-list-add-form';\n\nexport default ColumnListAddForm;\n","import React from 'react';\n\nimport './column-list.css';\nimport Column from \"src/components/pages/board-page/column\";\nimport ColumnListAddForm from \"src/components/pages/board-page/column-list-add-form\";\nimport {Draggable, Droppable} from \"react-beautiful-dnd\";\n\nconst ColumnList = ({ columns }) => {\n  return (\n    <Droppable\n      droppableId=\"all-columns\"\n      direction=\"horizontal\"\n      type=\"column\"\n    >\n      {provided => (\n        <div\n          className=\"column-list\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {columns.map((column, index) => (\n            <Draggable\n              key={column.id}\n              draggableId={column.id}\n              index={index}\n            >\n              {(provided) => (\n                <div\n                  className=\"column-list-item jumbotron text-center\"\n                  key={index}\n                  style={{...provided.draggableProps.style }}\n                  ref={provided.innerRef}\n                  {...provided.draggableProps}\n                >\n                  <Column column={column} columnIndex={index} provided={provided}/>\n                </div>\n              )}\n            </Draggable>\n          ))}\n          {provided.placeholder}\n          <ColumnListAddForm />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nconst ColumnListContainer = ({ columns } ) => {\n  return (\n    <React.Fragment>\n      <ColumnList columns={columns} />\n\n    </React.Fragment>\n  );\n};\n\nexport default ColumnListContainer;\n","import CardColumnListContainer from './column-list';\n\nexport default CardColumnListContainer;\n","import React, { Component } from 'react';\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Spinner from \"src/components/spinner\";\nimport ErrorIndicator from \"src/components/error-indicator\";\nimport {deleteBoard, dropColumn, dropColumnItem, fetchBoard, saveBoard} from \"src/actions\";\nimport compose from \"src/utils/compose\";\nimport withService from \"src/hoc/with-service\";\nimport ColumnList from \"src/components/pages/board-page/column-list\";\nimport {DragDropContext} from \"react-beautiful-dnd\";\n\nimport './board.css';\nimport {withRouter} from \"react-router-dom\";\n\nclass Board extends Component {\n  componentDidUpdate() {\n    const { saveBoard, boardId, board } = this.props;\n\n    saveBoard(boardId, board);\n  }\n\n  onDragEnd = result => {\n    if (result.type === \"column\") {\n      this.props.dropColumn(result);\n    } else {\n      this.props.dropColumnItem(result);\n    }\n  };\n\n  onBoardDelete = () => {\n    const { boardId, deleteBoard, history } = this.props;\n    //const result = window.prompt(\"The board will be deleted. Type 111 to delete it.\");\n\n    //if (result === '111') {\n      deleteBoard(boardId, history);\n    //}\n  };\n\n  render() {\n    const { board: { title, columns } } = this.props;\n\n    return (\n      <React.Fragment>\n        <div className=\"d-flex board-title-wrapper\">\n          <h1 className=\"board-title\">\n            {title}\n          </h1>\n          <button\n            className=\"btn btn-secondary btn-sm board-button\"\n            onClick={this.onBoardDelete}\n          >\n            <i className=\"fas fa-trash-alt\"/>\n          </button>\n          <span className=\"tip\"><span className=\"text-success\">Tip:</span> you can drag and drop columns and items</span>\n        </div>\n\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <ColumnList columns={columns}/>\n        </DragDropContext>\n      </React.Fragment>\n    );\n  }\n}\n\nclass BoardContainer extends Component {\n\n  componentDidMount() {\n    this.props.fetchBoard(this.props.boardId);\n  }\n\n  render() {\n    const { board, loading, error } = this.props;\n\n    if (loading) {\n      return <Spinner />;\n    }\n\n    if (error) {\n      return <ErrorIndicator />;\n    }\n\n    return <Board\n              board={board}\n              saveBoard={this.props.saveBoard}\n              dropColumnItem={this.props.dropColumnItem}\n              dropColumn={this.props.dropColumn}\n              deleteBoard={this.props.deleteBoard}\n              history={this.props.history}\n              boardId={this.props.boardId}\n           />;\n  }\n}\n\nconst mapStateToProps = ({ boardAsync: { board, loading, error }}) => {\n  return { board, loading, error };\n};\n\nconst mapDispatchToProps = (dispatch, { service }) => {\n\n  return bindActionCreators({\n    fetchBoard: fetchBoard(service),\n    saveBoard: saveBoard(service),\n    dropColumnItem: dropColumnItem,\n    dropColumn: dropColumn,\n    deleteBoard: deleteBoard(service),\n  }, dispatch);\n};\n\nexport default compose(\n  withService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(withRouter(BoardContainer));\n","import Board from './board';\n\nexport default Board;\n","import Header from \"./header\";\n\nexport default Header;","import React, {Component} from 'react';\nimport './header.css';\nimport {Link} from \"react-router-dom\";\n\nclass Header extends Component {\n  onHomeClick = () => {\n\n  };\n\n  render() {\n    return (\n      <div className=\"header\">\n        <Link to=\"/\" className=\"home-link\"><i className=\"fas fa-home\"/></Link>\n        <div className=\"logo-wrapper\">\n          <span className=\"logo\">TFS Coursework Spring 2019</span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Header;","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { HomePage } from '../pages/home-page';\n\nimport './app.css';\nimport Board from \"src/components/pages/board-page/board\";\nimport Header from \"src/components/header\";\n\nconst App = () => {\n  return (\n    <main role=\"main\" className=\"main\">\n      <Header />\n      <Switch>\n        <Route path=\"/\"\n               component={HomePage}\n               exact />\n        <Route path=\"/b/:id\"\n               render={({ match }) => {\n                 const { id } = match.params;\n                 return <Board boardId={id} />\n               }}\n               exact />\n      </Switch>\n    </main>\n  );\n};\n\nexport default App;","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nexport default class ErrorBoundry extends Component {\n\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return this.props.children;\n  }\n}","import { ActionTypes } from '../actions';\n\nconst boardListReducerAsync = (state, action) => {\n\n  if (state === undefined) {\n    return {\n      boards: [],\n      loading: true,\n      error: null\n    };\n  }\n\n  switch (action.type) {\n    case ActionTypes.fetchBoardsRequest:\n      return {\n        boards: [],\n        loading: true,\n        error: null\n      };\n\n    case ActionTypes.fetchBoardsSuccess:\n      return {\n        boards: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case ActionTypes.fetchBoardsFailure:\n      return {\n        boards: [],\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state.boardListAsync;\n  }\n};\n\nexport default boardListReducerAsync;\n","import { ActionTypes } from '../actions';\n\nconst boardListAddFormReducer = (state, action) => {\n\n  if (state === undefined) {\n    return {\n      boardTitle: \"\",\n      serverIsProcessingRequest: false,\n      error: null\n    };\n  }\n\n  switch (action.type) {\n    case ActionTypes.addBoardRequest:\n      return {\n        boardTitle: \"\",\n        serverIsProcessingRequest: true,\n        error: null\n      };\n\n    case ActionTypes.addBoardSuccess:\n      return {\n        boardTitle: \"\",\n        serverIsProcessingRequest: false,\n        error: null\n      };\n\n    case ActionTypes.addBoardFailure:\n      return {\n        boardTitle: \"\",\n        serverIsProcessingRequest: false,\n        error: action.payload\n      };\n\n    case ActionTypes.boardAddTitleChanged:\n      return {\n        boardTitle: action.payload,\n        serverIsProcessingRequest: false,\n        error: null\n      };\n\n    default:\n      return state.boardListAddForm;\n  }\n};\n\nexport default boardListAddFormReducer;\n","const getRandomString = (length = 8) => {\n  let randomString = \"\";\n  const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  for (let i = 0; i < length; i++) {\n    randomString += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return randomString;\n};\n\nexport default getRandomString;\n","import { ActionTypes } from '../actions';\nimport getRandomString from \"src/utils/get-random-string\";\n\nconst addColumn = ({ board }, columnTitle) => {\n  const { columns } = board;\n\n  const column = {\n    id: getRandomString(),\n    title: columnTitle,\n    items: []\n  };\n\n  const updatedColumns = [\n    ...columns,\n    column\n  ];\n\n  return {\n    ...board,\n    columns: updatedColumns\n  }\n};\n\nconst addItemToColumn = (column, columnItem) => {\n  return {\n    ...column,\n    items: [\n      ...column.items,\n      columnItem\n    ]\n  };\n};\n\nconst addColumnItem = ({ board }, { columnIndex, columnItemTitle }) => {\n  const { columns } = board;\n\n  const columnItem = {\n    id: getRandomString(),\n    title: columnItemTitle,\n    url: '#'\n  };\n\n  return {\n    ...board,\n    columns: columns.map((column,i) => i === columnIndex ? addItemToColumn(column, columnItem): column)\n  }\n};\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nconst remove = (list, removeIndex) => {\n  const result = Array.from(list);\n  result.splice(removeIndex, 1);\n\n  return result;\n};\n\nconst swapItemsInColumn = (column, startIndex, endIndex) => {\n  return {\n    ...column,\n    items: reorder(column.items, startIndex, endIndex)\n  };\n};\n\nconst move = (source, destination, startColumnId, startItemIndex, endColumnId, endItemIndex) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(startItemIndex, 1);\n\n  destClone.splice(endItemIndex, 0, removed);\n\n  const result = {};\n  result[startColumnId] = sourceClone;\n  result[endColumnId] = destClone;\n\n  return result;\n};\n\nconst dropColumnItem = (\n  { board },\n  {\n    source:\n      {\n        droppableId: startColumnId,\n        index: startItemIndex\n      },\n    destination\n  }) => {\n\n  if (!destination) {\n    return {\n      ...board\n    }\n  }\n\n  const { columns } = board;\n  const { droppableId: endColumnId, index: endItemIndex} = destination;\n\n  if (startColumnId === endColumnId) {\n    const columnIndex = columns.findIndex(column => column.id === startColumnId);\n\n    return {\n      ...board,\n      columns: columns.map((column, index) => index === columnIndex\n                                            ? swapItemsInColumn(column, startItemIndex, endItemIndex)\n                                            : column)\n    }\n  }\n\n  const startColumnIndex = columns.findIndex(column => column.id === startColumnId);\n  const endColumnIndex = columns.findIndex(column => column.id === endColumnId);\n\n  const result = move(\n    columns.find(column => column.id === startColumnId).items,\n    columns.find(column => column.id === endColumnId).items,\n    startColumnId,\n    startItemIndex,\n    endColumnId,\n    endItemIndex);\n\n  return {\n    ...board,\n    columns: columns.map((column, index) => {\n      if (index === startColumnIndex) {\n        return {\n          ...column,\n          items: result[startColumnId]\n        }\n      }\n\n      if (index === endColumnIndex) {\n        return {\n          ...column,\n          items: result[endColumnId]\n        }\n      }\n\n      return column;\n    })\n  }\n};\n\nconst dropColumn = (\n  { board },\n  {\n    source:\n      {\n        droppableId: startColumnId,\n        index: startColumnIndex\n      },\n    destination\n  }) => {\n\n  if (!destination) {\n    return {\n      ...board\n    }\n  }\n\n  const { columns } = board;\n  const { index: endColumnIndex} = destination;\n\n  return {\n    ...board,\n    columns: reorder(columns, startColumnIndex, endColumnIndex)\n  }\n};\n\nconst deleteItemFromColumn = (column, columnItemIndex) => {\n  return {\n    ...column,\n    items: remove(column.items, columnItemIndex)\n  };\n};\n\nconst deleteColumnItem = ({ board }, { columnIndex, columnItemIndex }) => {\n  const { columns } = board;\n\n  return {\n    ...board,\n    columns: columns.map((column, i) => i === columnIndex ? deleteItemFromColumn(column, columnItemIndex): column)\n  }\n};\n\nconst deleteColumn = ({ board }, { columnIndex }) => {\n  const { columns } = board;\n\n  return {\n    ...board,\n    columns: remove(columns, columnIndex)\n  }\n};\n\nconst boardReducerAsync = (state, action) => {\n\n  if (state === undefined) {\n    return {\n      board: null,\n      loading: true,\n      error: null\n    };\n  }\n\n  switch (action.type) {\n    case ActionTypes.fetchBoardRequest:\n    case ActionTypes.deleteBoardRequest:\n      return {\n        board: null,\n        loading: true,\n        error: null\n      };\n\n    case ActionTypes.fetchBoardSuccess:\n      return {\n        board: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case ActionTypes.fetchBoardFailure:\n    case ActionTypes.deleteBoardFailure:\n      return {\n        board: null,\n        loading: false,\n        error: action.payload\n      };\n\n    case ActionTypes.addColumn:\n      return {\n        board: addColumn(state.boardAsync, action.payload),\n        loading: false,\n        error: null\n      };\n\n    case ActionTypes.addColumnItem:\n      return {\n        board: addColumnItem(state.boardAsync, action.payload),\n        loading: false,\n        error: null\n      };\n\n    case ActionTypes.dropColumnItem:\n      return {\n        board: dropColumnItem(state.boardAsync, action.payload),\n        loading: false,\n        error: null\n      };\n\n    case ActionTypes.deleteColumnItem:\n      return {\n        board: deleteColumnItem(state.boardAsync, action.payload),\n        loading: false,\n        error: null\n      };\n\n    case ActionTypes.dropColumn:\n      return {\n        board: dropColumn(state.boardAsync, action.payload),\n        loading: false,\n        error: null\n      };\n\n    case ActionTypes.deleteColumn:\n      return {\n        board: deleteColumn(state.boardAsync, action.payload),\n        loading: false,\n        error: null\n      };\n\n    default:\n      return state.boardAsync;\n  }\n};\n\nexport default boardReducerAsync;\n","import { ActionTypes } from '../actions';\n\nconst columnAddFormReducer = (state, action) => {\n\n  if (state === undefined) {\n    return {\n      columnItemTitle: \"\",\n    };\n  }\n\n  switch (action.type) {\n    case ActionTypes.columnItemAddTitleChanged:\n      return {\n        columnItemTitle: action.payload,\n      };\n\n    case ActionTypes.addColumnItem:\n      return {\n        columnItemTitle: \"\"\n      };\n\n    default:\n      return state.columnAddForm;\n  }\n};\n\nexport default columnAddFormReducer;\n","import { ActionTypes } from '../actions';\n\nconst columnListAddFormReducer = (state, action) => {\n\n  if (state === undefined) {\n    return {\n      columnTitle: \"\",\n    };\n  }\n\n  switch (action.type) {\n    case ActionTypes.columnAddTitleChanged:\n      return {\n        columnTitle: action.payload,\n      };\n\n    case ActionTypes.addColumn:\n      return {\n        columnTitle: \"\"\n      };\n\n    default:\n      return state.columnListAddForm;\n  }\n};\n\nexport default columnListAddFormReducer;\n","import boardListReducerAsync from './board-list-reducer-async';\nimport boardListAddFormReducer from './board-list-add-form-reducer';\nimport boardReducerAsync from './board-reducer-async';\nimport columnAddFormReducer from \"./column-add-form-reducer\";\nimport columnListAddFormReducer from \"./column-list-add-form-reducer\";\n\nconst reducer = (state, action) => {\n  return {\n    boardListAsync: boardListReducerAsync(state, action),\n    boardListAddForm: boardListAddFormReducer(state, action),\n    boardAsync: boardReducerAsync(state, action),\n    columnAddForm: columnAddFormReducer(state, action),\n    columnListAddForm: columnListAddFormReducer(state, action),\n  };\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport reducer from './reducers';\n\nconst logMiddleware = ({ getState }) => (next) => (action) => {\n  console.log(action.type, getState());\n  return next(action);\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(\n  applyMiddleware(thunkMiddleware, logMiddleware)\n));\n\nexport default store;\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport ApiService from './services/api-service';\nimport { ServiceProvider } from './hoc/service-context';\n\nimport store from './store';\n\nconst service = new ApiService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <ServiceProvider value={service}>\n        <Router>\n          <App />\n        </Router>\n      </ServiceProvider>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById('root')\n);\n","export default class ApiService {\n\n  _apiBase = 'https://fintech-coursework-server.herokuapp.com/api';\n\n  getResource = async (url) => {\n    const res = await fetch(`${this._apiBase}${url}`);\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}` +\n        `, received ${res.status}`)\n    }\n\n    return await res.json();\n  };\n\n  addResource = async (url, resource) => {\n    const res = await fetch(`${this._apiBase}${url}`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(resource)\n    });\n\n    if (!res.ok) {\n      throw new Error(`Could not create resource ${url}` +\n        `, received ${res.status}`)\n    }\n\n    return await res.json();\n  };\n\n  putResource = async (url, resource) => {\n    const res = await fetch(`${this._apiBase}${url}`, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(resource)\n    });\n\n    if (!res.ok) {\n      throw new Error(`Could not create resource ${url}` +\n        `, received ${res.status}`)\n    }\n\n    //return await res.json();\n    return res;\n  };\n\n  deleteResource = async (url) => {\n    const res = await fetch(`${this._apiBase}${url}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (!res.ok) {\n      throw new Error(`Could not create resource ${url}` +\n        `, received ${res.status}`)\n    }\n\n    //return await res.json();\n    return res;\n  };\n\n  getBoards = async () => {\n   return await this.getResource(`/boards`);\n  };\n\n  addBoard = async (boardTitle) => {\n    return await this.addResource('/boards', {title: boardTitle});\n  };\n\n  getBoard = async (boardId) => {\n    return await this.getResource(`/boards/${boardId}`);\n  };\n\n  saveBoard = async (boardId, board) => {\n    return await this.putResource(`/boards/${boardId}`, board);\n  };\n\n  deleteBoard = async (boardId) => {\n    return await this.deleteResource(`/boards/${boardId}`);\n  };\n}\n"],"sourceRoot":""}